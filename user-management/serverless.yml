# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: shehanadhikari
# "service" is the name of this project. This will also be added to your AWS resource names.
service: user-management

provider:
  name: aws
  runtime: nodejs20.x
  region: ${env:AWS_REGION}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:BatchWriteItem
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - s3:GetObject
        - sqs:ReceiveMessage
        - sqs:DeleteMessage
        - sqs:GetQueueAttributes
        - kinesis:GetRecords
        - kinesis:GetShardIterator
        - kinesis:DescribeStream
        - kinesis:ListStreams
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:PutLogEvents
      Resource: "*"

functions:
  dataProcessor:
    handler: handler.process
    # layers:
    #   - arn:aws:lambda:us-east-1:060651286468:layer:aws-sdk-layer:1
    events:
      - s3:
          bucket: shehan-user-data
          event: s3:ObjectCreated:*
      - sqs:
          arn:
            Fn::GetAtt:
              - UserDataQueue
              - Arn

resources:
  Resources:
    UserDataQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: user-data-queue

    DynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: user-data-table
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

# plugins:
#   - serverless-plugin-aws-alerts

custom:
  # alerts:
  #   dashboards: true
  #   topics:
  #     alarm:
  #       topic:
  #         displayName: Alarm Topic
  #   definitions:
  #     functionErrors:
  #       namespace: 'AWS/Lambda'
  #       metric: Errors
  #       threshold: 5
  #       statistic: Sum
  #       period: 60
  #       evaluationPeriods: 1
  #       comparisonOperator: GreaterThanOrEqualToThreshold
  #   alarms:
  #     - functionErrors

  serverless-offline:
    port: 3000
    babelOptions:
      presets: ["env"]

# Optional for development
# To run the service locally
plugins:
  - serverless-offline

